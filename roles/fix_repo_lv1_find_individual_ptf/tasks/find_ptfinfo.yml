---
# Tasks file for find_ptfinfo
- name: Print list_var
  ansible.builtin.debug:
    var: list_var

- name: Get the individual ptfs' information in catalog
  ibmi_fix_repo_lv1:
    image_root: "{{ image_root }}"
    checksum: true
    action: "find"
    parameters: "{{ [list_var] }}"
    additional_sql: 'ORDER BY ordered_ptf_count, download_date DESC'
    fields:
      - 'image_info'
      - 'image_path'
      - 'image_files'
      - 'download_date'
      - 'ordered_ptf'
  delegate_to: "{{ repo_server }}"
  register: fix_repo_find_result

- name: Print the PTF find result
  ansible.builtin.debug:
    var: fix_repo_find_result

- name: Print find success list in catalog
  ansible.builtin.debug:
    var: fix_repo_find_result.success_list.query_result
  when: fix_repo_find_result.success_list[0].query_result != []

- name: Print find failed list in catalog
  ansible.builtin.debug:
    var: fix_repo_find_result.fail_list
  when: fix_repo_find_result.success_list[0].query_result == []

- name: Compose ptf_fail_list
  ansible.builtin.set_fact:
    ptf_fail_list: "{{ ptf_fail_list | default([]) + [list_var.ptf] }}"
  when: fix_repo_find_result.success_list[0].query_result == []

- name: Compose ptf_success_list
  ansible.builtin.set_fact:
    ptf_success_list: "{{ ptf_success_list | default([]) + [list_var.ptf] }}"
  when: fix_repo_find_result.success_list[0].query_result != []

- name: Compose ptf_find_result
  ansible.builtin.set_fact:
    ptf_find_result: "{{ ptf_find_result | default([]) + [fix_repo_find_result.success_list[0]] }}"
  when: fix_repo_find_result.success_list[0].query_result != []

- name: Print ptf_find_result
  ansible.builtin.debug:
    var: ptf_find_result

- name: Print ptf_fail_list
  ansible.builtin.debug:
    var: ptf_fail_list

- name: Print ptf_success_list
  ansible.builtin.debug:
    var: ptf_success_list
