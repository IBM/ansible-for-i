---
- name: Initialize the variables
  ansible.builtin.set_fact:
    fix_list: []
    ptfs_on_system: {}
    product_list: []
    ptf_not_installed: []

- name: Compose the PTF number list
  ansible.builtin.set_fact:
    fix_list: "{{ fix_list | default([]) + [ptf_info.ptf_id] }}"
  with_list: "{{ group.ptf_list }}"
  loop_control:
    loop_var: ptf_info

- name: Query PTF list from target system
  ibm.power_ibmi.ibmi_fix:
    operation: 'query'
    fix_list: "{{ fix_list }}"
  register: ptf_info

- name: Query product information from target system
  ibm.power_ibmi.ibmi_sql_query:
    sql: "SELECT DISTINCT PRODUCT_ID FROM QSYS2.LICENSE_INFO"
  register: result

- name: Compose product list
  ansible.builtin.set_fact:
    product_list: "{{ product_list | default([]) + [record.PRODUCT_ID] }}"
  with_list: "{{ result.row }}"
  loop_control:
    loop_var: record

- name: Compose ptf status list on targret system
  ansible.builtin.set_fact:
    ptfs_on_system: "{{ ptfs_on_system | default({}) | combine({ ptf.PTF_IDENTIFIER: ptf.PTF_LOADED_STATUS }) }}"
  with_list: "{{ ptf_info.ptf_list }}"
  loop_control:
    loop_var: ptf

- name: PTF does not exist
  ansible.builtin.set_fact:
    ptf_not_installed: "{{ ptf_not_installed | default([]) + [{ 'PTF_IDENTIFIER': ptf.ptf_id, 'PTF_LOADED_STATUS': 'NON-EXISTENT' }] }}"
  when:
    - not ptfs_on_system.get(ptf.ptf_id)
    - ptf.product in product_list
  with_list: "{{ group.ptf_list }}"
  loop_control:
    loop_var: ptf

- name: PTF exists but status is not APPLIED, PERMANENTLY APPLIED or SUPERSEDED
  ansible.builtin.set_fact:
    ptf_not_installed: "{{ ptf_not_installed | default([]) + [{ 'PTF_IDENTIFIER': ptf.PTF_IDENTIFIER, 'PTF_LOADED_STATUS': ptf.PTF_LOADED_STATUS }] }}"
  when:
    - ptf.PTF_LOADED_STATUS != "APPLIED"
    - ptf.PTF_LOADED_STATUS != "PERMANENTLY APPLIED"
    - ptf.PTF_LOADED_STATUS != "SUPERSEDED"
    # There is an bug in 7.3 and before, but sqlservice won't change this in the future.
    - ptf.PTF_LOADED_STATUS != "SUPERCEDED"
  with_list: "{{ ptf_info.ptf_list }}"
  loop_control:
    loop_var: ptf

- name: Compose group_status
  ansible.builtin.set_fact:
    group_status: "{{ group_status | default([]) + [{ 'PTF_GROUP_NUMBER': group.ptf_group_number, 'CURRENT_PTF_GROUP_LEVEL': group.ptf_group_level,
    'PTF_GROUP_STATUS': 'NOT INSTALLED', 'PTF_NOT_INSTALLED': ptf_not_installed }] }}"
