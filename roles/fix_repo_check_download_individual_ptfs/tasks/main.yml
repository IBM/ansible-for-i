---
# Tasks file for fix_repo_check_download_individual_ptfs
- name: Initialize list
  ansible.builtin.set_fact:
    list: []

- name: Compose list
  ansible.builtin.set_fact:
    list: "{{ list|default([]) + [{'ptf_id': ptfs_list_parm_var }] }}"
  loop: "{{ ptfs_list_parm }}"
  loop_control:
    loop_var: ptfs_list_parm_var

- name: Initialize rc, check_fail_list, record_not_found_list, download_fail_list and download_success_list
  ansible.builtin.set_fact:
    rc: 0
    check_fail_list: []
    record_not_found_list: []
    download_fail_list: []
    download_success_list: []

- name: Check if individual PTFs are already in catalog
  ibm.power_ibmi.ibmi_fix_repo:
    type: "single_ptf"
    action: "find"
    parameters: "{{ list }}"
    checksum: true
  register: fix_repo_find_result
  delegate_to: "{{ repo_server }}"

- name: Print the individual PTFs information in catalog
  ansible.builtin.debug:
    var: fix_repo_find_result

- name: Perform actions to download PTFs
  when: fix_repo_find_result.fail_list is defined
  block:
    - name: Compose be downloaded ptfs list
      ansible.builtin.set_fact:
        record_not_found_list: "{{ record_not_found_list | default([]) + [ fail_record ] }}"
      when: fail_record.db_record == 'FILE_NOT_FOUND' or fail_record.db_record == 'RECORD_NOT_FOUND' or fail_record.db_record == 'MATCH_NOT_FOUND'
      with_list: "{{ fix_repo_find_result.fail_list }}"
      loop_control:
        loop_var: fail_record

    - name: Compose check_fail_list with error reason
      ansible.builtin.set_fact:
        check_fail_list: "{{ fix_repo_find_result.fail_list | difference( record_not_found_list ) }}"

    - name: Include download_individual_ptfs role to download a list of individual PTFs
      ansible.builtin.include_role:
        name: download_individual_ptfs
      vars:
        to_be_downloaded_list: "{{ record_not_found_list }}"
        download_server: "{{ repo_server }}"
      when: record_not_found_list != []

    - name: Add PTF entries to catalog
      when: download_success_list != []
      block:
        - name: Add individual PFF record into catalog
          ibm.power_ibmi.ibmi_fix_repo:
            type: "single_ptf"
            action: "add"
            checksum: true
            parameters: "{{ download_success_list }}"
          register: fix_repo_add_result
          when: download_success_list != []
          delegate_to: "{{ repo_server }}"

        # - name: Print fail_list with other errors
        #   ansible.builtin.debug:
        #     var: check_fail_list

        # - name: Print be downloaded ptfs list
        #   ansible.builtin.debug:
        #     var: record_not_found_list

        - name: Print fail downloadded ptfs list
          ansible.builtin.debug:
            var: download_fail_list

        - name: Print successfully downloadded ptfs list
          ansible.builtin.debug:
            var: download_success_list

    - name: Note if download failure
      when: download_success_list == [] and record_not_found_list != []
      block:
        - name: Download fail
          ansible.builtin.debug:
            msg: "No ptf is successfully downloaded"

- name: Note if no failures
  when: fix_repo_find_result.fail_list is not defined
  block:
    - name: End play when no ptf need to download
      ansible.builtin.debug:
        msg: "All ptfs are in catalog"

- name: Get the final result of PTFs in catalog
  ibm.power_ibmi.ibmi_fix_repo:
    type: "single_ptf"
    action: "find"
    parameters: "{{ list }}"
    checksum: true
  register: final_find_result
  delegate_to: "{{ repo_server }}"

- name: Print the final individual PTFs information in catalog
  ansible.builtin.debug:
    var: final_find_result
