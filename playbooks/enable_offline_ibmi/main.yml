# Copyright (c) IBM Corporation 2019, 2020
# Apache License, Version 2.0 (see https://opensource.org/licenses/Apache-2.0

# setup offline ibmi
---
- name: Playbook to set up IBM i for ansible collection on offline target
  hosts: all
  gather_facts: false
  vars:
    package_path: ""
    ibmi_host: "{{ ansible_ssh_host }}"
    ibmi_user: "{{ ansible_ssh_user }}"
    ibmi_pass: ""
    required_rpms: [six, itoolkit, ibm_db]
    is_python39_to_be_installed: true
    python_interpreter_version: "{{ ansible_python_interpreter.split('/')[-1].split('.')[0] }}"
    python_version: "{{ ansible_python_interpreter.split('/')[-1].split('.')[0] }}"
    yum_packages: ["bootstrap.sh", "bootstrap.tar.Z"]
    remote_temp_dir: /tmp/ansible-rpm

  tasks:
    - name: Set up actions
      block:
        - name: Set python39
          ansible.builtin.set_fact:
            python_version: "python39"
            python_interpreter_version: "python3.9"
          when: is_python39_to_be_installed

        - name: Create a local temporary directory
          ansible.builtin.raw: mkdir -p {{ remote_temp_dir }}
          args:
            executable: /qopensys/usr/bin/qsh
          register: tempfile_result
          changed_when: true

        - name: Initialize ibmi_pass
          no_log: true
          ansible.builtin.set_fact:
            ibmi_pass: "{{ ansible_ssh_pass }}"
          when: ansible_ssh_pass is defined

        - name: Set yum_installed to false
          ansible.builtin.set_fact:
            yum_installed: false

        - name: Include tasks from ibmi_install_yum.yml
          ansible.builtin.include_tasks: ibmi_install_yum.yml

        - name: Include tasks from ibmi_install_python.yml
          ansible.builtin.include_tasks: ibmi_install_python.yml

        - name: IBM i set up
          when: yum_installed
          block:
            - name: Disable the ibm base repository
              ansible.builtin.lineinfile:
                path: "/QOpenSys/etc/yum/repos.d/ibmi-base.repo"
                regexp: "enabled=1"
                line: "enabled=0"

            - name: Disable the ibm release repository
              ansible.builtin.lineinfile:
                path: "/QOpenSys/etc/yum/repos.d/ibmi-release.repo"
                regexp: "enabled=1"
                line: "enabled=0"

            - name: Find the home directory
              ibm.power_ibmi.ibmi_user_and_group:
                operation: "display"
                user: "{{ ansible_ssh_user }}"
              register: user_result

            - name: Set home dir name
              ansible.builtin.set_fact:
                home_dir: "{{ user_result['result_set'][0]['HOME_DIRECTORY'] }}"

            - name: Ensure home directory exist
              ansible.builtin.file:
                path: "{{ home_dir }}"
                state: directory
                owner: "{{ ansible_ssh_user }}"
                mode: '0755'

            - name: Ensure .profile exist
              ansible.builtin.file:
                path: "{{ home_dir }}/.profile"
                state: touch
                owner: "{{ ansible_ssh_user }}"
                mode: '0644'

            - name: Export PATH to ssh user profile permanently
              ansible.builtin.raw: echo 'PATH=/QOpenSys/pkgs/bin:$PATH' >> $HOME/.profile
              args:
                executable: /qopensys/usr/bin/qsh
              changed_when: true

            - name: Export PATH to ssh user profile permanently
              ansible.builtin.raw: echo 'export PATH' >> $HOME/.profile
              args:
                executable: /qopensys/usr/bin/qsh
              changed_when: true

        - name: Change SSHD server auto-started
          ansible.builtin.command: 'system "chgtcpsvr svrspcval(*sshd) autostart(*yes)"'
          changed_when: true

        - name: Verify 5770DG1
          ansible.builtin.command: system "DSPSFWRSC"
          register: installed_native_products
          changed_when: false

        - name: Promote message if 5770DG1 is not installed
          ansible.builtin.fail:
            msg: 5770DG1 is not installed
          when: '"5770DG1" not in installed_native_products.stdout'

        - name: IBM i is now available for being managed by Ansible
          ansible.builtin.debug:
            msg: "The IBM i node is ready for Ansible."
          when: '"5770DG1" in installed_native_products.stdout'

      always:
        - name: Remove temp dir
          ansible.builtin.raw: rm -rf '{{ remote_temp_dir }}'
          failed_when: false
          changed_when: true
