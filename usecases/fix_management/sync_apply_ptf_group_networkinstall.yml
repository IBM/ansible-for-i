# Copyright (c) IBM Corporation 2019, 2020
# Apache License, Version 2.0 (see https://opensource.org/licenses/Apache-2.0)

# Description:
  # This playbook is used for 2nd level solution. It will get the PTF group information in catalog.
  # Then call sync_apply_ptf_group_networkinstall role to install PTF group on the target system.
  # sync_apply_ptf_group_networkinstall role will setup network install env on repo server and use network install mechanism 
  # to install the PTF group on the target system.

# Parameters:
  # repo_server -- The IBM i server which can use SNDPTFORD to download and store PTF and PTF group install files.
  # target_system -- The target IBM i server that receives and applies the PTF group.
  # ptf_group -- The information of the PTF groups to be synced and applied on the target. ptf_group_number and ptf_group_level are required. 
  # delete -- Specifies whether or not to delete the file install dir on target server after apply. The default value is true.
  # ptf_omit_list -- The list of PTFs which will be omitted. The elements of the list are dict. The key of the dict should be the product ID of the fix that is omitted.

# Command example: 
  # ansible-playbook ./sync_apply_ptf_group_networkinstall.yml -e "{'target_system': 'systemA', 'repo_server': 'reposerver', 'ptf_group':
  # {'ptf_group_number':'SF99740', 'ptf_group_level':'20121'}, 'ptf_omit_list': [{'5770SS1': 'SI78582'}, {'5770ss1': 'SI78544'}]}"
---
- name: Using remote network install mechanism to install the PTF group on target system
  hosts: '{{ target_system }}'
  gather_facts: false
  collections:
    - ibm.power_ibmi

  vars:
    repo_server: "{{ repo_server }}"
    ptf_group: "{{ ptf_group }}"

  tasks:
    - name: Get the PTF group information in catalog
      ibmi_fix_repo:
        type: "ptf_group"
        checksum: true
        action: "find"
        parameters:
          - "{{ {'ptf_group_number': ptf_group.ptf_group_number, \
             'ptf_group_level': ptf_group.ptf_group_level | default(omit), \
             'release_date': ptf_group.release_date | default(omit), 'additional_param':'ORDER BY release_date LIMIT 1'} }}"
      delegate_to: "{{ repo_server }}"
      register: fix_repo_find_result

    - name: Print the PTF group information
      debug:
        var: fix_repo_find_result

    - block:
        - name: Debug msg
          debug:
            msg: "PTF group information is not in catalog, quit."
        - name: end_host
          meta: end_host
      when: fix_repo_find_result.success_list is not defined or fix_repo_find_result.success_list == []

    - name: Get the PTF group information in download_status table, in case the order is still downloading
      ibmi_fix_repo:
        type: "download_status"
        action: "find"
        parameters:
          - "{{ {'ptf_group_number': ptf_group.ptf_group_number, \
             'ptf_group_level': ptf_group.ptf_group_level | default(omit), \
             'release_date': ptf_group.release_date | default(omit), \
             'additional_param':'ORDER BY release_date LIMIT 1'} }}"
      delegate_to: "{{ repo_server }}"
      register: download_status_find_result

    - name: Print the download_status table information
      debug:
        var: download_status_find_result

    - block:
        - name: Debug msg
          debug:
            msg: "The newest PTF group is still downloading, quit."
        - name: end_host
          meta: end_host
      when: download_status_find_result.success_list[0].download_status == 'downloading'

    - name: Compose apply list
      set_fact:
        ptf_group_information: "{{ fix_repo_find_result.success_list[0] }}"

    - name: Include sync_apply_ptf_group_networkinstall role to install PTF group on target ibm i
      include_role:
        name: sync_apply_ptf_group_networkinstall
      vars:
        ptf_group_info: "{{ ptf_group_information }}"
        src_host: "{{ repo_server }}"
