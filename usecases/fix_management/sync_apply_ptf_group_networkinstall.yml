---
- name: Using remote network install mechanism to install the PTF group on target system
# This playbook is used for 2nd level solution. It will get the PTF group information in catalog.
# Then call sync_apply_ptf_group_networkinstall role to install PTF group on the target system.

# Command example: ansible-playbook ./sync_apply_ptf_group_networkinstall.yml -e "{'target_system': 'systemA', 'repo_server': 'reposerver', 'ptf_group':
# {'ptf_group_number':'SF99740', 'ptf_group_level':'20121'}, 'ptf_omit_list': [{'5770SS1': 'SI78582'}, {'5770ss1': 'SI78544'}]}"
# The 'ptf_omit_list' parameter specifies the PTFs which need to be omitted, including product ID and PTF number.
  hosts: '{{ target_system }}'
  gather_facts: false
  collections:
    - ibm.power_ibmi

  vars:
    repo_server: "{{ repo_server }}"
    ptf_group: "{{ ptf_group }}"

  tasks:
    - name: Get the PTF group information in catalog
      ibmi_fix_repo:
        type: "ptf_group"
        checksum: true
        action: "find"
        parameters:
          - "{{ {'ptf_group_number': ptf_group.ptf_group_number, \
             'ptf_group_level': ptf_group.ptf_group_level | default(omit), \
             'release_date': ptf_group.release_date | default(omit), 'additional_param':'ORDER BY release_date LIMIT 1'} }}"
      delegate_to: "{{ repo_server }}"
      register: fix_repo_find_result

    - name: Print the PTF group information
      debug:
        var: fix_repo_find_result

    - block:
        - name: Debug msg
          debug:
            msg: "PTF group information is not in catalog, quit."
        - name: end_host
          meta: end_host
      when: fix_repo_find_result.success_list is not defined or fix_repo_find_result.success_list == []

    - name: Get the PTF group information in download_status table, in case the order is still downloading
      ibmi_fix_repo:
        type: "download_status"
        action: "find"
        parameters:
          - "{{ {'ptf_group_number': ptf_group.ptf_group_number, \
             'ptf_group_level': ptf_group.ptf_group_level | default(omit), \
             'release_date': ptf_group.release_date | default(omit), \
             'additional_param':'ORDER BY release_date LIMIT 1'} }}"
      delegate_to: "{{ repo_server }}"
      register: download_status_find_result

    - name: Print the download_status table information
      debug:
        var: download_status_find_result

    - block:
        - name: Debug msg
          debug:
            msg: "The newest PTF group is still downloading, quit."
        - name: end_host
          meta: end_host
      when: download_status_find_result.success_list[0].download_status == 'downloading'

    - name: Compose apply list
      set_fact:
        ptf_group_information: "{{ fix_repo_find_result.success_list[0] }}"

    - name: Include sync_apply_ptf_group_networkinstall role to install PTF group on target ibm i
      include_role:
        name: sync_apply_ptf_group_networkinstall
      vars:
        ptf_group_info: "{{ ptf_group_information }}"
        src_host: "{{ repo_server }}"
