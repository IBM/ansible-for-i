# Copyright (c) IBM Corporation 2019, 2020
# Apache License, Version 2.0 (see https://opensource.org/licenses/Apache-2.0)

# Description:
  # This playbook will transfer the PTF group files to the target system according to the giving PTF Group directory, and apply the PTF group.

# Parameters:
  # repo_server -- The IBM i/Linux server stores PTFs and PTF groups. 
  # target_system -- The target IBM i server that receives and applies the PTF group.
  # ptf_group_dir -- The directory of PTF group files on repo server.
  # delete -- Specifies whether or not to delete the file install dir on target server after apply. The default value is true.
  # ptf_omit_list -- The list of PTFs which will be omitted. The elements of the list are dict. The key of the dict should be the product ID of the fix that is omitted.

# Command example: 
  # ansible-playbook /sync_apply_ptf_group_using_filedir.yml -e "{'target_system': 'systemA', 'repo_server': 'systemB',
  # 'ptf_group_dir': '/tmp/SF99729_125', 'delete': true, 'ptf_omit_list': [{'5770SS1': 'SI78582'}, {'5770ss1': 'SI78544'}]}"
---
- name: Sync and apply ptf group files
  hosts: '{{ target_system }}'
  gather_facts: false
  collections:
    - ibm.power_ibmi

  vars:
    repo_server: "{{ repo_server }}"
    deletefile: "{{ delete | default(true) }}"

  tasks:
    - name: Recursively find ptf group files
      find:
        paths: "{{ ptf_group_dir }}"
        recurse: true
      delegate_to: "{{ repo_server }}"
      register: find_result

    - name: Print find_result
      debug:
        var: find_result

    - name: quit
      fail:
        msg: "ptf_group_dir: {{ ptf_group_dir }} is not valid or doesn't contain any file, quit."
      when: find_result.matched == 0

    - name: Compose target tmp dir str
      set_fact:
        path: "~/PTF/{{ ptf_group_dir | basename }}"

    - name: Print path
      debug:
        var: path

    - name: check if the folder is already exists
      ansible.builtin.stat:
        path: "{{ path }}"
      register: stat_result
      ignore_errors: true

    - name: Include check_file role to check if files are the same
      include_role:
        name: check_file
      vars:
        target_file_path: "{{ path }}"
        repo_file_path: "{{ ptf_group_dir }}"
      when: stat_result.stat.exists is true

    - block:
        - name: Clear receive dir
          file:
            path: "{{ path }}"
            state: absent
          register: clear_result
          ignore_errors: true

        - name: Make receive dir
          file:
            path: "{{ path }}"
            state: directory
            mode: 0755
          register: file_result
          ignore_errors: true

        - block:
            - name: Skip when make receive dir fail
              debug:
                msg: "{{ 'Make receive dir ' + path + ' fail, end host.' }}"

            - name: end_host
              meta: end_host
          when: file_result.failed == 1

        - block:
            - name: compose src_list
              set_fact:
                src_list: "{{ src_list | default([]) + [{ 'src': find_result_files_var.path }] }}"
              loop: "{{ find_result.files }}"
              loop_control:
                loop_var: find_result_files_var

            - name: debug src_list
              debug:
                var: src_list

            - name: Transfer image to target_system
              ibm.power_ibmi.ibmi_synchronize_files:
                dest: "{{ path }}"
                src_list: "{{ src_list }}"
              delegate_to: "{{ repo_server }}"
              register: sync_result

            - name: Print transfer
              debug:
                var: sync_result

            - block:
                - name: skip when transfer failed
                  debug:
                    msg: "One or more ptf group file transfer failed, quit apply ptf group action."

                - name: delete the dest file dir
                  file:
                    path: "{{ path }}"
                    state: absent
                  ignore_errors: true
                  when: deletefile

                - name: end_host
                  meta: end_host
              when: sync_result.fail_list != []
          when: file_result.failed == 0

      when: same_files is false or stat_result.stat.exists is false

    - name: Get the home dir on target server
      shell: 'echo $HOME'
      register: home_dir

    - name: Compose path
      set_fact:
        path: "{{ path | regex_replace('~', home_dir.stdout) }}"
      when: path | regex_search("^~")

    - name: debug path
      debug:
        var: path

    - block:
        - name: Apply PTF group
          ibm.power_ibmi.ibmi_fix_imgclg:
            src: '{{ path }}'
            fix_omit_list: '{{ ptf_omit_list | default([]) }}'
            rollback: true
          register: apply_result
          ignore_errors: true

        - name: Print apply result
          debug:
            var: apply_result

        - name: Print apply result
          debug:
            msg: "PTF Group applied fail. Please see above job log"
          when: apply_result.rc != 0

        - name: Print apply result
          debug:
            msg: "PTF Group applied succesfully."
          when: apply_result.rc == 0

    - name: delete the dest file dir
      file:
        path: "{{ path }}"
        state: absent
      ignore_errors: true
      when: deletefile
