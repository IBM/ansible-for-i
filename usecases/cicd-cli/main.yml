- name: Playbook for cicd-cli
  hosts: localhost

  vars:
    build_with_stmfs: false       # Build with STMFs or PF members
    provision: true               # If you want provision a new VM for each build by leveraging PowerVC
    git_repo_url: '<your-git-repo-url>'
    git_branch: '<your-git-branch>'
    cleanup: true                 # If clean up build env after build completes
    build_number: "{{ 9999 | random }}"

  tasks:
    - name: Set build_lib
      ansible.builtin.set_fact:
        build_lib: "BUILD_{{ build_number }}"

    - name: Set path and workspace
      ansible.builtin.set_fact:
        build_path: "/tmp/{{ build_lib }}"
        local_workspace: '~/workspace/{{ build_lib }}'

    - name: Block for CICD steps
      block:
        - name: Step 1 - clone source code from git
          ansible.builtin.include_tasks: git_clone.yml

        - name: Block for when provision
          when: provision
          block:
            - name: Include provision related vars if provision is true
              ansible.builtin.include_vars: provision_vars.yml

            - name: Step 2.1 - provision vm on demand
              ansible.builtin.include_tasks: provision_vm.yml

        - name: Step 2.2 - add build system to in-memory inventory
          ansible.builtin.include_tasks: add_build_system.yml

        - name: Step 3 - put source code to build machine
          ansible.builtin.include_tasks: put_code.yml

        - name: Step 4 - build your app on build machine
          ansible.builtin.include_tasks: build.yml

        - name: Step 5 - run test and completes on build machine
          ansible.builtin.include_tasks: post_build_actions.yml

      always:
        - name: Step 6 - cleanup on demand
          ansible.builtin.include_tasks: cleanup.yml
          when: cleanup
