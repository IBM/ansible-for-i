- name: Playbook to build
  hosts: localhost
  tasks:
    - name: Add VM to ansible in-memory inventory (vm-{{ build_lib }})
      ansible.builtin.add_host:
        name: build_system
        ansible_ssh_host: '{{ build_system_ip }}'
        ansible_user: '{{ build_system_user }}'
        ansible_ssh_pass: '{{ build_system_pass }}'
        groups: build_systems
        ansible_ssh_extra_args: -o StrictHostKeyChecking=no
        ansible_python_interpreter: /QOpensys/pkgs/bin/python3
      when: provision | bool

    - name: Delete build_path if already exists ({{ build_path }})
      ansible.builtin.file:
        state: absent
        path: '{{ build_path }}'
      delegate_to: '{{ item }}'
      with_items:
        - "{{ host_names.split() }}"

    - name: Create build lib
      ibm.power_ibmi.ibmi_cl_command:
        cmd: CRTLIB {{ build_lib }}
      delegate_to: '{{ item }}'
      with_items:
        - "{{ host_names.split() }}"
      failed_when: false

    - name: Git clone from source repository
      ansible.builtin.git:
        repo: "https://{{ github_access_token }}@{{ git_repo_url | regex_replace('[A-z]*://', '') }}"
        dest: "{{ build_path }}"    # noqa: latest
      delegate_to: '{{ item }}'
      with_items:
        - "{{ host_names.split() }}"
      when: github_access_token | length > 0
      changed_when: github_access_token | length > 0

    - name: Git clone from source repository
      ansible.builtin.git:
        repo: "https://{{ git_repo_url | regex_replace('[A-z]*://', '') }}"
        dest: "{{ build_path }}"    # noqa: latest
      delegate_to: '{{ item }}'
      with_items:
        - "{{ host_names.split() }}"
      when: github_access_token | length == 0
      changed_when: github_access_token | length == 0

    - name: Call CL command to build application
      ibm.power_ibmi.ibmi_cl_command:
        cmd: CRTBNDCPP PGM({{ build_lib }}/SENDMSG) SRCSTMF('{{ build_path }}/sendMsg.c')
      when: build_with_stmfs|bool
      delegate_to: '{{ item }}'
      with_items:
        - "{{ host_names.split() }}"

    - name: Block for when not build_with_stmfs
      when: not build_with_stmfs|bool
      block:
        - name: CRTSRCPF on remote IBM i
          ibm.power_ibmi.ibmi_cl_command:
            cmd: CRTSRCPF FILE({{ build_lib }}/QCLSRC)
          delegate_to: '{{ item }}'
          with_items:
            - "{{ host_names.split() }}"

        - name: Copy From Stream File
          ibm.power_ibmi.ibmi_cl_command:
            cmd: CPYFRMSTMF FROMSTMF('{{ build_path }}/samplecl.txt') TOMBR('/QSYS.LIB/{{ build_lib }}.LIB/QCLSRC.FILE/SAMPLECL.MBR') MBROPT(*REPLACE)
          delegate_to: '{{ item }}'
          with_items:
            - "{{ host_names.split() }}"

        - name: Build cl program
          ibm.power_ibmi.ibmi_cl_command:
            cmd: CRTCLPGM PGM({{ build_lib }}/SAMPLECL) SRCFILE({{ build_lib }}/QCLSRC)
          delegate_to: '{{ item }}'
          with_items:
            - "{{ host_names.split() }}"
